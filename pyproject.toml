[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sepa-pipeline"
version = "0.1.0"
description = "Data pipeline for SEPA Dataset"
authors = [
    {name = "Sabellaj05", email = "sabellamanjuan@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1,<0.29.0",
    "beautifulsoup4>=4.13.3,<5.0.0",
    "tqdm>=4.67.1,<5.0.0",
    "tenacity>=9.1.2,<10.0.0"
]

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "htmlcov",
    ".pytest_cache",
    ".coverage",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["sepa_pipeline"]

[dependency-groups]
dev = [
    "ruff>=0.5.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/sepa_pipeline",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

[tool.coverage.run]
source = ["src/sepa_pipeline"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "httpx.*",
    "bs4.*",
    "tqdm.*",
    "tenacity.*"
]
ignore_missing_imports = true
